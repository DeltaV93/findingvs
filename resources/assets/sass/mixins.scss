// CLEARFIX
// ______________________________________

@mixin clearfix() {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

// MEDIA QUERY BUILDER
// ______________________________________

@mixin media-query($breakpoint) {
  @media (min-width: #{map-get($grid-breakpoints, $breakpoint)}) {
    @content;
  }
}

// CONTAINER
// ______________________________________

@mixin make-container() {
  width: auto;
  margin-left: auto;
  margin-right: auto;
  @include clearfix();

  @each $breakpoint, $container-width in $container-widths {
    @include media-query($breakpoint) {
      max-width: $container-width;
    }
  }
}

// COLUMN ROW
// ______________________________________

@mixin make-row() {
  margin-left: auto;
  margin-right: auto;
  @include clearfix();
}

// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
// Makes the @content apply to the given breakpoint and wider.
@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}
@mixin make-col-span($size, $columns: $grid-columns) {
  width: percentage($size / $columns);
}

@mixin make-col-offset($size, $columns: $grid-columns) {
  margin-left: percentage($size / $columns);
}

@mixin make-col-push($size, $columns: $grid-columns) {
  left: if($size > 0, percentage($size / $columns), auto);
}

@mixin make-col-pull($size, $columns: $grid-columns) {
  right: if($size > 0, percentage($size / $columns), auto);
}

@mixin make-col-modifier($type, $size, $columns) {
  // Work around the lack of dynamic mixin @include support (https://github.com/sass/sass/issues/626)
  @if $type == push {
    @include make-col-push($size, $columns);
  } @else if $type == pull {
    @include make-col-pull($size, $columns);
  } @else if $type == offset {
    @include make-col-offset($size, $columns);
  }
}
// COLUMNS
// ______________________________________

// @mixin make-columns() {
//   @media (min-width: map-get($grid-breakpoints, "md")) {
//     @each $column-name in $grid-column-names {
//       $i: index($grid-column-names, $column-name);
//       .col-md-#{$column-name} {
//           float: left;
//           width: percentage($i / $grid-columns);
//       }
//     }
//   }
// }
@mixin make-columns($columns: $grid-columns, $gutter: $grid-gutter, $breakpoints: $grid-breakpoints) {
  // Common properties for all breakpoints
  %grid-column {
    position: relative;
    // Prevent columns from collapsing when empty
    min-height: 1px;
    // Inner gutter via padding
    padding-right: ($gutter / 2);
    padding-left: ($gutter / 2);
  }
  @each $breakpoint in map-keys($breakpoints) {
    @for $i from 1 through $columns {
      .#{$breakpoint}-#{$i} {
        @extend %grid-column;
      }
    }
    @include media-breakpoint-up($breakpoint) {
      // Work around cross-media @extend (https://github.com/sass/sass/issues/1050)
      %grid-column-float-#{$breakpoint} {
        float: left;
      }
      @for $i from 1 through $columns {
        .col-#{$breakpoint}-#{$i} {
          @extend %grid-column-float-#{$breakpoint};
          @include make-col-span($i, $columns);
        }
      }
      @each $modifier in (pull, push, offset) {
        @for $i from 0 through $columns {
          .col-#{$breakpoint}-#{$modifier}-#{$i} {
            @include make-col-modifier($modifier, $i, $columns);
          }
        }
      }
    }
  }
 }
